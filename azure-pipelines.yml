jobs:
- job: TestWindows
  pool:
    vmImage: 'windows-2019'
  strategy:
    matrix:
      Application_netcoreapp2.2:
        projectName: AzurePipelines.Application.Tests
        framework: netcoreapp2.2
      Application_net461:
        projectName: AzurePipelines.Application.Tests
        framework: net461
      InfraEmit_netcoreapp2.2:
        projectName: AzurePipelines.Infra.Emit.Tests
        framework: netcoreapp2.2
      InfraEmit_net461:
        projectName: AzurePipelines.Infra.Emit.Tests
        framework: net461
  steps:
  - task: DotNetCoreCLI@2
    displayName: 'Test $(projectName)'
    inputs:
      command: test
      arguments: '--framework $(framework) --logger "trx;LogFileName=$(Agent.TempDirectory)/TestResults/$(projectName)-$(framework).trx" /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=$(Agent.TempDirectory)/TestResults/$(projectName)-$(framework).opencover.xml test/$(projectName)/$(projectName).csproj'
      publishTestResults: true

  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'TestWindows-TestResults-$(projectName)-$(framework)'
      targetPath: '$(Agent.TempDirectory)/TestResults'

- job: Quality
  dependsOn: [ TestWindows ]
  pool:
    vmImage: 'windows-2019'
  steps:
  - task: DownloadPipelineArtifact@1
    inputs:
      downloadPath: '$(Agent.TempDirectory)/TestResults'

  - task: SonarCloudPrepare@1
    displayName: 'Prepare Code Analysis'
    inputs:
      SonarCloud: 'SonarCloud'
      organization: 'basverweij-github'
      projectKey: 'basverweij_azure-pipelines-csharp'
      projectName: 'Azure Pipelines CSharp'
      extraProperties: 'sonar.cs.opencover.reportsPaths=$(Agent.TempDirectory)/TestResults/*.opencover.xml'

  - task: DotNetCoreCLI@2
    displayName: 'Build Solution'
    inputs:
      command: build
      arguments: '--configuration Debug'
  
  - task: SonarCloudAnalyze@1
    displayName: 'Run Code Analysis'

  - task: SonarCloudPublish@1
    displayName: 'Publish Code Analysis'

  - task: Palmmedia.reportgenerator.reportgenerator-build-release-task.reportgenerator@4
    displayName: ReportGenerator
    inputs:     
      reports: '$(Agent.TempDirectory)/TestResults/*.opencover.xml'
      targetdir: '$(Agent.TempDirectory)/Reports'
      reporttypes: 'HtmlInline_AzurePipelines;Cobertura;Badges'
      assemblyfilters: '-nunit*'

  - task: PublishCodeCoverageResults@1
    inputs:
      summaryFileLocation: '$(Agent.TempDirectory)/Reports/Cobertura/Cobertura.xml'
      reportDirectory: '$(Agent.TempDirectory)/Reports/Cobertura'
      codecoverageTool: cobertura